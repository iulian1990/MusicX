// Generated by data binding compiler. Do not edit!
package com.sample.musicx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.sample.musicx.R;
import com.sample.musicx.fragments.PlayerUI;
import com.sample.musicx.viewmodels.PlayerViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentPlayerBinding extends ViewDataBinding {
  @NonNull
  public final ImageView albumArt;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextView elapsedTime;

  @NonNull
  public final ImageButton playerAddPlaylist;

  @NonNull
  public final ImageButton playerLooping;

  @NonNull
  public final ImageButton playerPause;

  @NonNull
  public final ImageButton playerPlay;

  @NonNull
  public final SeekBar playerSeekBar;

  @NonNull
  public final ImageButton playerSkipToNext;

  @NonNull
  public final ImageButton playerSkipToPrevious;

  @NonNull
  public final FrameLayout playerState;

  @NonNull
  public final TextView playerSubtitle;

  @NonNull
  public final TextView playerTitle;

  @NonNull
  public final TextView totalTime;

  @Bindable
  protected PlayerViewModel mViewModel;

  @Bindable
  protected PlayerUI mPlayerUI;

  protected FragmentPlayerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView albumArt, ImageButton backButton, TextView elapsedTime,
      ImageButton playerAddPlaylist, ImageButton playerLooping, ImageButton playerPause,
      ImageButton playerPlay, SeekBar playerSeekBar, ImageButton playerSkipToNext,
      ImageButton playerSkipToPrevious, FrameLayout playerState, TextView playerSubtitle,
      TextView playerTitle, TextView totalTime) {
    super(_bindingComponent, _root, _localFieldCount);
    this.albumArt = albumArt;
    this.backButton = backButton;
    this.elapsedTime = elapsedTime;
    this.playerAddPlaylist = playerAddPlaylist;
    this.playerLooping = playerLooping;
    this.playerPause = playerPause;
    this.playerPlay = playerPlay;
    this.playerSeekBar = playerSeekBar;
    this.playerSkipToNext = playerSkipToNext;
    this.playerSkipToPrevious = playerSkipToPrevious;
    this.playerState = playerState;
    this.playerSubtitle = playerSubtitle;
    this.playerTitle = playerTitle;
    this.totalTime = totalTime;
  }

  public abstract void setViewModel(@Nullable PlayerViewModel viewModel);

  @Nullable
  public PlayerViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setPlayerUI(@Nullable PlayerUI playerUI);

  @Nullable
  public PlayerUI getPlayerUI() {
    return mPlayerUI;
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_player, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPlayerBinding>inflateInternal(inflater, R.layout.fragment_player, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_player, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPlayerBinding>inflateInternal(inflater, R.layout.fragment_player, null, false, component);
  }

  public static FragmentPlayerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPlayerBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentPlayerBinding)bind(component, view, R.layout.fragment_player);
  }
}
